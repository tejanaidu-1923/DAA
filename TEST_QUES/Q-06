import heapq
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
def mergeKLists(lists):
    heap = []
    for lst in lists:
        while lst:
            heapq.heappush(heap, lst.val)
            lst = lst.next
    
    dummy = ListNode()
    curr = dummy
    while heap:
        val = heapq.heappop(heap)
        curr.next = ListNode(val)
        curr = curr.next
    
    return dummy.next
list1 = ListNode(1, ListNode(4, ListNode(5)))
list2 = ListNode(1, ListNode(3, ListNode(4)))
list3 = ListNode(2, ListNode(6))
lists = [list1, list2, list3]

merged_list = mergeKLists(lists)
while merged_list:
    print(merged_list.val, end=" -> ")
    merged_list = merged_list.next
print("None")
