class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right
def is_valid_sequence(root, arr):
    def dfs(node, arr, index):
        if not node or index >= len(arr) or node.val != arr[index]:
            return False
        if not node.left and not node.right and index == len(arr) - 1:
            return True
        return dfs(node.left, arr, index + 1) or dfs(node.right, arr, index + 1)
    
    return dfs(root, arr, 0)
root = TreeNode(0, TreeNode(1, TreeNode(0, None, TreeNode(1)), TreeNode(1, TreeNode(0))), TreeNode(0, TreeNode(0)))
print(is_valid_sequence(root, [0, 1, 0, 1]))
print(is_valid_sequence(root, [0, 0, 1]))
print(is_valid_sequence(root, [0, 1, 1]))
